{"version":3,"file":"js/table.bundle.js","mappings":"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","sources":["webpack://veeraj-plugin/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://veeraj-plugin/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://veeraj-plugin/./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack://veeraj-plugin/./node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack://veeraj-plugin/./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://veeraj-plugin/./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack://veeraj-plugin/./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://veeraj-plugin/./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack://veeraj-plugin/./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://veeraj-plugin/./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://veeraj-plugin/external window [\"wp\",\"blocks\"]","webpack://veeraj-plugin/external window [\"wp\",\"blockEditor\"]","webpack://veeraj-plugin/external window [\"wp\",\"components\"]","webpack://veeraj-plugin/external window [\"wp\",\"element\"]","webpack://veeraj-plugin/external window \"ReactJSXRuntime\"","webpack://veeraj-plugin/./assets/js/gutenberg-block/table.js"],"sourcesContent":["function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nexport { _defineProperty as default };","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };","import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };","function _arrayLikeToArray(r, a) {\n  (null == a || a > r.length) && (a = r.length);\n  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];\n  return n;\n}\nexport { _arrayLikeToArray as default };","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nfunction _slicedToArray(r, e) {\n  return arrayWithHoles(r) || iterableToArrayLimit(r, e) || unsupportedIterableToArray(r, e) || nonIterableRest();\n}\nexport { _slicedToArray as default };","function _arrayWithHoles(r) {\n  if (Array.isArray(r)) return r;\n}\nexport { _arrayWithHoles as default };","function _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}\nexport { _iterableToArrayLimit as default };","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nfunction _unsupportedIterableToArray(r, a) {\n  if (r) {\n    if (\"string\" == typeof r) return arrayLikeToArray(r, a);\n    var t = {}.toString.call(r).slice(8, -1);\n    return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? arrayLikeToArray(r, a) : void 0;\n  }\n}\nexport { _unsupportedIterableToArray as default };","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _nonIterableRest as default };","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blocks\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blockEditor\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"components\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"ReactJSXRuntime\"];","import { registerBlockType } from '@wordpress/blocks';\r\nimport { useBlockProps, InspectorControls } from '@wordpress/block-editor';\r\nimport { PanelBody, CheckboxControl } from '@wordpress/components';\r\nimport { useState, useEffect } from '@wordpress/element';\r\n\r\nregisterBlockType('veeraj/table-block', {\r\n    title: veerajPluginData.translations.tableBlockTitle,\r\n    category: 'widgets',\r\n    icon: 'table-col-after',\r\n    attributes: {\r\n        visibleColumns: {\r\n            type: 'object',\r\n            default: {\r\n                id: true,\r\n                fname: true,\r\n                lname: true,\r\n                email: true,\r\n                date: true,\r\n            },\r\n        },\r\n        data: {\r\n            type: 'object',\r\n            default: null,\r\n        },\r\n    },\r\n\r\n    // edit function for the block editor\r\n    edit: (props) => {\r\n        const { attributes, setAttributes } = props;\r\n        const { visibleColumns, data } = attributes;\r\n        const blockProps = useBlockProps();\r\n        const [loading, setLoading] = useState(false);\r\n        const [error, setError] = useState(null);\r\n    \r\n        // Function to capitalize the first letter of each word\r\n        const capitalizeFirstLetter = (string) => {\r\n            return string.charAt(0).toUpperCase() + string.slice(1);\r\n        };\r\n    \r\n        // Column names map for full names\r\n        const columnNames = {\r\n            id: 'ID',\r\n            fname: 'First Name',\r\n            lname: 'Last Name',\r\n            email: 'Email',\r\n            date: 'Date'\r\n        };\r\n    \r\n        useEffect(() => {\r\n            // If data is already loaded in the block, don't fetch it again\r\n            if (data) {\r\n                return; // Skip fetching if data is already present\r\n            }\r\n    \r\n            // Fetch data from the AJAX endpoint if no data is already available\r\n            setLoading(true);\r\n            fetch(veerajPluginData.ajaxurl, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded'\r\n                },\r\n                body: new URLSearchParams({\r\n                    action: 'get_veeraj_data',\r\n                    nonce: veerajPluginData.nonce,\r\n                }),\r\n            })\r\n                .then((response) => response.json())\r\n                .then((result) => {\r\n                    if (result.success) {\r\n                        setAttributes({ data: result.data });\r\n                    } else {\r\n                        setError(result.data?.error || veerajPluginData.translations.unknownError);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    setError(err.message);\r\n                })\r\n                .finally(() => {\r\n                    setLoading(false);\r\n                });\r\n        }, [data, setAttributes]); // Run effect only if `data` is not available\r\n    \r\n        if (loading) {\r\n            return <p {...blockProps}>{veerajPluginData.translations.loadingMessage}</p>;\r\n        }\r\n    \r\n        if (error) {\r\n            return <p {...blockProps}>{veerajPluginData.translations.errorMessage}: {escapeHTML(error)}</p>;\r\n        }\r\n    \r\n        return (\r\n            <div {...blockProps}>\r\n                <InspectorControls>\r\n                    <PanelBody title=\"Column Visibility\">\r\n                        {Object.keys(visibleColumns).map((column) => (\r\n                            <CheckboxControl\r\n                                key={column}\r\n                                label={`Show ${columnNames[column] || capitalizeFirstLetter(column)}`}  // Use full names or capitalize the first letter\r\n                                checked={visibleColumns[column]}\r\n                                onChange={(value) =>\r\n                                    setAttributes({\r\n                                        visibleColumns: {\r\n                                            ...visibleColumns,\r\n                                            [column]: value,\r\n                                        },\r\n                                    })\r\n                                }\r\n                            />\r\n                        ))}\r\n                    </PanelBody>\r\n                </InspectorControls>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            {visibleColumns.id && <th>{veerajPluginData.translations.id}</th>}\r\n                            {visibleColumns.fname && <th>{veerajPluginData.translations.firstName}</th>}\r\n                            {visibleColumns.lname && <th>{veerajPluginData.translations.lastName}</th>}\r\n                            {visibleColumns.email && <th>{veerajPluginData.translations.email}</th>}\r\n                            {visibleColumns.date && <th>{veerajPluginData.translations.date}</th>}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {Object.values(data?.data?.rows || {}).map((row) => (\r\n                            <tr key={row.id}>\r\n                                {visibleColumns.id && <td>{row.id}</td>}\r\n                                {visibleColumns.fname && <td>{row.fname}</td>}\r\n                                {visibleColumns.lname && <td>{row.lname}</td>}\r\n                                {visibleColumns.email && <td>{row.email}</td>}\r\n                                {visibleColumns.date && (\r\n                                    <td>{new Date(row.date * 1000).toLocaleString()}</td>\r\n                                )}\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    },\r\n    // save function for saving data and rendering it on the frontend\r\n    save: (props) => {\r\n        const { attributes } = props;\r\n        const { visibleColumns, data } = attributes;\r\n\r\n        // No data to render if no visible columns or data\r\n        if (!data || !Object.values(visibleColumns).includes(true)) {\r\n            return <p>{veerajPluginData.translations.noDataMessage}</p>;\r\n        }\r\n\r\n        return (\r\n            <div {...useBlockProps.save()}>\r\n                <div className=\"veeraj-table-wrapper\">\r\n                    <table className=\"veeraj-table\">\r\n                        <thead>\r\n                            <tr>\r\n                                {visibleColumns.id && <th>{veerajPluginData.translations.id}</th>}\r\n                                {visibleColumns.fname && <th>{veerajPluginData.translations.firstName}</th>}\r\n                                {visibleColumns.lname && <th>{veerajPluginData.translations.lastName}</th>}\r\n                                {visibleColumns.email && <th>{veerajPluginData.translations.email}</th>}\r\n                                {visibleColumns.date && <th>{veerajPluginData.translations.date}</th>}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {Object.values(data?.data?.rows || {}).map((row) => (\r\n                                <tr key={row.id}>\r\n                                    {visibleColumns.id && <td>{row.id}</td>}\r\n                                    {visibleColumns.fname && <td>{row.fname}</td>}\r\n                                    {visibleColumns.lname && <td>{row.lname}</td>}\r\n                                    {visibleColumns.email && <td>{row.email}</td>}\r\n                                    {visibleColumns.date && (\r\n                                        <td>{new Date(row.date * 1000).toLocaleString()}</td>\r\n                                    )}\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    },\r\n});\r\n"],"names":["_typeof","o","Symbol","iterator","constructor","prototype","_defineProperty","e","r","t","i","toPrimitive","call","TypeError","String","toPropertyKey","Object","defineProperty","value","enumerable","configurable","writable","_arrayLikeToArray","a","length","n","Array","_slicedToArray","isArray","l","u","f","next","done","push","toString","slice","name","from","test","window","registerBlockType","title","veerajPluginData","translations","tableBlockTitle","category","icon","attributes","visibleColumns","type","default","id","fname","lname","email","date","data","edit","props","_data$data","setAttributes","blockProps","useBlockProps","_useState2","useState","loading","setLoading","_useState4","error","setError","columnNames","useEffect","fetch","ajaxurl","method","headers","body","URLSearchParams","action","nonce","then","response","json","result","_result$data","success","unknownError","err","message","_jsx","_objectSpread","children","loadingMessage","_jsxs","errorMessage","escapeHTML","InspectorControls","PanelBody","keys","map","column","CheckboxControl","label","concat","string","charAt","toUpperCase","checked","onChange","firstName","lastName","values","rows","row","Date","toLocaleString","save","_data$data2","includes","className","noDataMessage"],"sourceRoot":""}